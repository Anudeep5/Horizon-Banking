name: Deploy to ECS

on:
    push:
        branches:
            - main

env:
    AWS_REGION: ${{ secrets.AWS_REGION }}
    ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
    ECS_CLUSTER_NAME: ${{ secrets.ECS_CLUSTER_NAME }}
    ECS_SERVICE_NAME: ${{ secrets.ECS_SERVICE_NAME }}
    ECS_TASK_DEFINITION: ${{ secrets.ECS_TASK_DEFINITION }}
    CONTAINER_NAME: ${{ secrets.CONTAINER_NAME }}

jobs:
    deploy:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v3
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: ${{ env.AWS_REGION }}

            - name: Log in to Amazon ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v2

            - name: Build, tag, and push Docker image to ECR
              run: |
                  docker build -t $ECR_REPOSITORY .
                  docker tag $ECR_REPOSITORY:latest ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:latest
                  docker push ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:latest

            - name: Download and sanitize ECS task definition
              run: |
                  aws ecs describe-task-definition --task-definition $ECS_TASK_DEFINITION \
                    --query "taskDefinition" > task-def.json

                  cat task-def.json | jq '{
                    family: .family,
                    networkMode: .networkMode,
                    requiresCompatibilities: .requiresCompatibilities,
                    cpu: .cpu,
                    memory: .memory,
                    executionRoleArn: .executionRoleArn,
                    taskRoleArn: .taskRoleArn,
                    containerDefinitions: [
                      .containerDefinitions[0] + {
                        image: "${{ steps.login-ecr.outputs.registry }}/'"$ECR_REPOSITORY"':latest"
                      }
                    ]
                  }' > new-task-def.json

            - name: Register new ECS task definition revision
              id: register-task
              run: |
                  TASK_DEF_ARN=$(aws ecs register-task-definition \
                    --cli-input-json file://new-task-def.json \
                    --query 'taskDefinition.taskDefinitionArn' --output text)
                  echo "TASK_DEF_ARN=$TASK_DEF_ARN" >> $GITHUB_ENV

            - name: Deploy updated task to ECS
              run: |
                  aws ecs update-service \
                    --cluster $ECS_CLUSTER_NAME \
                    --service $ECS_SERVICE_NAME \
                    --task-definition $TASK_DEF_ARN
